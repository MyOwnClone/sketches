```xml
<Manifest>
  <AgentType>Android_Forms</AgentType>
  <Guid>bf65a06f-4db9-4242-a57d-ad2be18e83b5</Guid>
  <Resources>
    <Resource>
      <NormalizedRelativePath>10CbVZE.png</NormalizedRelativePath>
      <LastSyncTime>2014-10-08T15:17:51Z</LastSyncTime>
    </Resource>
    <Resource>
      <NormalizedRelativePath>1EhFsao.png</NormalizedRelativePath>
      <LastSyncTime>2014-10-08T15:17:51Z</LastSyncTime>
    </Resource>
    <Resource>
      <NormalizedRelativePath>1oIYpso.png</NormalizedRelativePath>
      <LastSyncTime>2014-10-08T15:17:51Z</LastSyncTime>
    </Resource>
    <Resource>
      <NormalizedRelativePath>1rPp1vm.jpg</NormalizedRelativePath>
      <LastSyncTime>2014-10-08T15:17:51Z</LastSyncTime>
    </Resource>
    <Resource>
      <NormalizedRelativePath>1rYGvGU.png</NormalizedRelativePath>
      <LastSyncTime>2014-10-08T15:17:51Z</LastSyncTime>
    </Resource>
    <Resource>
      <NormalizedRelativePath>1s07h2W.png</NormalizedRelativePath>
      <LastSyncTime>2014-10-08T15:17:51Z</LastSyncTime>
    </Resource>
    <Resource>
      <NormalizedRelativePath>1sXguu1.jpg</NormalizedRelativePath>
      <LastSyncTime>2014-10-08T15:17:51Z</LastSyncTime>
    </Resource>
    <Resource>
      <NormalizedRelativePath>1vCRbKh.jpg</NormalizedRelativePath>
      <LastSyncTime>2014-10-08T15:17:51Z</LastSyncTime>
    </Resource>
  </Resources>
</Manifest>
```
```csharp
using Xamarin.Forms;

var darkGray = Color.FromRgb (80, 80, 80);
var lightGray = Color.FromRgb (190, 190, 190);

Color nameLabelTextColor;
Color titleLabelTextColor;

if (Device.OS == TargetPlatform.Android) {
    nameLabelTextColor = lightGray;
    titleLabelTextColor = lightGray;
} else {
    nameLabelTextColor = darkGray;
    titleLabelTextColor = darkGray;
}

var LargeFont = Font.SystemFontOfSize (20);
var ItalicFont = Font.SystemFontOfSize (14, FontAttributes.Italic);
var SmallFont = Font.SystemFontOfSize (14);

Func<string, ImageSource> CreateImageSource = path => GetResourcePath (path);

var data = new List<Tuple<ImageSource, string, string>> {
    Tuple.Create (
        CreateImageSource ("1s07h2W.png"),
        "Miguel",
        "CTO and Co-flounder"),
    Tuple.Create (
        CreateImageSource ("1rYGvGU.png"),
        "Nat",
        "CEO and Co-flounder"),
    Tuple.Create (
        CreateImageSource ("1EhFsao.png"),
        "Stephanie",
        "SVP of Sales and Customer Success"),
    Tuple.Create (
        CreateImageSource ("1oIYpso.png"),
        "Joanne",
        "VP of Marketing"),
    Tuple.Create (
        CreateImageSource ("10CbVZE.png"),
        "Joseph",
        "Director of Developer Relations and Co-flounder"),
    Tuple.Create (
        CreateImageSource ("1vCRbKh.jpg"),
        "Rob",
        "VP of Business Development"),
    Tuple.Create (
        CreateImageSource ("1rPp1vm.jpg"),
        "Bryan",
        "Vice President of Education Services"),
    Tuple.Create (
        CreateImageSource ("1sXguu1.jpg"),
        "Jason",
        "Team Lead - Xamarin.Forms"),
};

var searchBar = new SearchBar { Placeholder = "Search ..." };


var template = new DataTemplate (() => {

    var image = new Image {
        WidthRequest = 100,
        HeightRequest = 100,
//        Aspect = Aspect.AspectFill,
    };
    image.SetBinding (Image.SourceProperty, "Item1");

    var nameLabel = new Label ();
    nameLabel.SetBinding (Label.TextProperty, "Item2");

    // modify the name Label text properties
//    nameLabel.Font = LargeFont;

    var titleLabel = new Label ();
    titleLabel.SetBinding (Label.TextProperty, "Item3");

    // modify the title Label text properties
//    titleLabel.Font = ItalicFont;
//    titleLabel.TextColor = titleLabelTextColor;
    var textLayout = new StackLayout {
        Padding = 10,
        VerticalOptions = LayoutOptions.Center,
        Children = {
            nameLabel,
            titleLabel,
        }
    };

    var cellLayout = new StackLayout {
        Padding = 10,
        Orientation = StackOrientation.Horizontal,
        Children = { image, textLayout }
    };

    var cell = new ViewCell {
        View = cellLayout,
    };

    return cell;
});
var listView = new ListView {
    ItemTemplate = template,
    ItemsSource = data,
    RowHeight = 100
};

var layout = new StackLayout {
    Children = {
        searchBar,
        listView
    }
};

RootPage.Children.Add(new ContentPage {
    Padding = new Thickness (0, 20, 0, 0),
    Content = layout
});

```
